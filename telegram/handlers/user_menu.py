import json
from aiogram import Dispatcher, types
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import State, StatesGroup
from aiogram import Bot

import bot_actions

from telegram import markups


class OrderItem(StatesGroup):
    waiting_for_photo = State()
    waiting_for_question = State()


class UserMenu:
    def __init__(self, bot: Bot):
        self.bot = bot

    @staticmethod
    def check_auth(decorated_func):
        """Auth decorator"""
        def inner(*args, **kwargs):
            decorated_func(*args, **kwargs)
        return inner

    @staticmethod
    async def user_choice(call: types.CallbackQuery):
        keyboard = markups.get_user_menu()
        await call.message.answer(text='–ß—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å? üßê',
                                  reply_markup=keyboard)

    @staticmethod
    async def get_bot_groups(call: types.CallbackQuery):
        await call.message.edit_text(text='–°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ –æ –≥—Ä—É–ø–ø–∞—Ö, –≤ –∫–æ—Ç–æ—Ä—ã—Ö —Å–æ—Å—Ç–æ–∏—Ç –±–æ—Ç...')
        await bot_actions.collect_bot_groups_from_telegram()
        with open('C:/PyProject/profiEstateBot/config/bot_groups.json', 'r', encoding='utf-8') as file:
            data = json.loads(file.read())
        keyboard = markups.get_groups_menu(data)
        await call.message.edit_text(text='–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –∏–∑ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ:',
                                     reply_markup=keyboard)

    @staticmethod
    async def get_group_data(call: types.CallbackQuery):
        selected_group = call.data.split('selected_group_')[1]
        await call.message.edit_text(f'–°–æ–±–∏—Ä–∞—é –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –≥—Ä—É–ø–ø—ã: {selected_group}.\n'
                                     f'–°–∫–æ—Ä–æ—Å—Ç—å —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö 50 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –º–∏–Ω—É—Ç—É\n'
                                     f'–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
        await bot_actions.get_data_from_group(group_name=selected_group)
        doc = open(f'C:/PyProject/profiEstateBot/excel/{selected_group}.xlsx', 'rb')
        keyboard = markups.get_back_button()
        await call.message.answer_document(doc, reply_markup=keyboard)

    @staticmethod
    async def send_faq(call: types.CallbackQuery):
        keyboard = markups.get_back_button()
        await call.message.edit_text(text='‚Ñπ –°–ø—Ä–∞–≤–∫–∞ ‚Ñπ \n\n'
                                          '–ß—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n'
                                          '1) –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –±–æ—Ç–∞ –≤ —Ü–µ–ª–µ–≤—ã–µ –≥—Ä—É–ø–ø—ã\n'
                                          '2) –ù–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–°–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø", –ø–æ—Å–ª–µ —á–µ–≥–æ –±–æ—Ç –≤—ã–¥–∞—Å—Ç '
                                          '—Å–ø–∏—Å–æ–∫ –≥—Ä—É–ø–ø –≤ –∫–æ—Ç–æ—Ä—ã—Ö –æ–Ω —Å–æ—Å—Ç–æ–∏—Ç\n'
                                          '3) –í—ã–±—Ä–∞—Ç—å –≥—Ä—É–ø–ø—É –∏–∑ –∫–æ—Ç–æ—Ä–æ–π –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–ª—É—á–∏—Ç—å '
                                          '–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö\n'
                                          '4) –ë–æ—Ç –≤—ã–¥–∞—Å—Ç —Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –ø–æ –ø—Ä–æ—à–µ—Å—Ç–≤–∏—é –≤—Ä–µ–º–µ–Ω–∏',
                                     reply_markup=keyboard)

    def register_handlers(self, dp: Dispatcher):
        """Register message handlers"""
        dp.register_callback_query_handler(self.user_choice, text='start_app')
        dp.register_callback_query_handler(self.user_choice, text='back')
        dp.register_callback_query_handler(self.get_bot_groups, text='get_group_list')
        dp.register_callback_query_handler(self.send_faq, text='faq')
        dp.register_callback_query_handler(self.get_group_data, Text(contains='selected_group'))
